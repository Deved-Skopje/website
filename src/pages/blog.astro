---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import { AstroSeo } from "@astrolib/seo";

// Filter blog entries with 'draft: false' & date before current date
const publishedBlogEntries = await getCollection("blog", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});

// Sort content entries by publication date
publishedBlogEntries.sort(function (a, b) {
  return b.data.publishDate.valueOf() - a.data.publishDate.valueOf();
});
const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();

const resolvedImageWithDomain = new URL(
  "/opengraph.jpg",
  Astro.site
).toString();
---

<AstroSeo
      title={"DeveD Blog"}
      description="DeveD | Your friendly neighborhood DevRel."
      canonical={canonicalURL}
      twitter={{
        handle: "@DeveD_Skopje",
        site: "https://deved.mk",
        cardType: "summary_large_image",
      }}
      openGraph={{
        url: Astro.url.toString() || 'https://deved.mk',
        title: "DeveD Blog",
        description: "DeveD | Your friendly neighborhood DevRel.",
        images: [
          {
            url: resolvedImageWithDomain,
            width: 1200,
            height: 630,
            alt: "Social open graph",
            type: "image/jpeg",
          },
          {
            url: resolvedImageWithDomain,
            width: 4096,
            height: 4096,
            alt: "Twitter open graph",
            type: "image/jpeg",
          },
          { url: resolvedImageWithDomain },
          { url: resolvedImageWithDomain },
        ],
        site_name: "DeveD",
      }}
    
    />

<Layout title="Blog">
  <Container>
    <Sectionhead>
      <Fragment slot="title">Our Blog</Fragment>
      <Fragment slot="desc">
        All things DeveD, as seen from its founders.
      </Fragment>
    </Sectionhead>
    <main class="mt-16">
      <ul class="grid gap-16 max-w-4xl mx-auto">
        {
          publishedBlogEntries.map((blogPostEntry, index) => (
            <li>
              <a href={`/blog/${blogPostEntry.slug}`}>
                <div class="grid md:grid-cols-2 gap-5 md:gap-10 items-center">
                  <Image
                    width="1200"
                    height="600"
                    src={blogPostEntry.data.image.src}
                    alt={blogPostEntry.data.image.alt}
                    class="w-full rounded-md max-h-[285px] object-cover"
                  />
                  <div>
                    <span class="text-blue-400 uppercase tracking-wider text-sm font-medium">
                      {blogPostEntry.data.category}
                    </span>

                    <h2 class="text-3xl font-semibold leading-snug tracking-tight mt-1 ">
                      {blogPostEntry.data.title}
                    </h2>

                    <div class="flex gap-2 mt-3">
                      <span class="text-gray-400">
                        {blogPostEntry.data.author}
                      </span>
                      <span class="text-gray-400">â€¢ </span>
                      <time
                        class="text-gray-400"
                        datetime={blogPostEntry.data.publishDate.toISOString()}>
                        {blogPostEntry.data.publishDate.toDateString()}
                      </time>
                    </div>
                  </div>
                </div>
              </a>
            </li>
          ))
        }
      </ul>
    </main>
  </Container>
</Layout>
